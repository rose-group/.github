# https://github.com/kanezi/boot-render-deploy/blob/master/.github/workflows/docker-publish.yml

name: Maven Docker

on:
  workflow_call:
    inputs:
      os:
        default: '["ubuntu-latest"]'
        required: false
        type: string

      java-matrix:
        default: '["8"]'
        required: false
        type: string

      java-dist-matrix:
        default: '["zulu"]'
        required: false
        type: string

  workflow_dispatch:
    inputs:
      os:
        default: '["ubuntu-latest"]'
        description: OS
        required: false
        type: string

      java-matrix:
        description: Java Version
        default: '["8"]'
        required: false
        type: string

      java-dist-matrix:
        description: Java Distribution
        default: '["zulu"]'
        required: false
        type: string

      image-name:
        description: Name of the image without a tag
        default: "rosestack/test"
        required: false
        type: string
env:
  MAVEN_ARGS: -B -U -ntp
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    uses: ./.github/workflows/maven-build.yml
    secrets: inherit
    with:
      os: ${{inputs.os}}
      java-matrix: ${{inputs.java-matrix}}
      java-dist-matrix: ${{inputs.java-dist-matrix}}

  docker:
    runs-on: ubuntu-latest
    needs: build
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "TAG=$(echo ${{ github.ref_name }} | sed -e 's/v//')" >> $GITHUB_ENV
          if [ -n "${{ inputs.image-name }}" ]; then
            echo "IMAGE_NAME=${{ inputs.image-name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ github.repository }}" >> $GITHUB_ENV
          fi

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Publish Docker Image
        run: |
          mvn spring-boot:build-image -DskipTests
          export image-name = ${{ inputs.image-name || env.IMAGE_NAME }}
          docker tag $image-name $image-name:$TAG
          echo "Pushing the image $image-name to Docker Hub..."
          docker push --all-tags $image-name