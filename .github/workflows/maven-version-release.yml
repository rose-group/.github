name: Maven Version Release

## Step:
## 1. Create release branch in local
## 2. mvn versions:set for release
## 3. create new tag for release
## 4. update version to snapshot
## 5. Delete release branch
## 6. push tag -> trigger release workflow


on:
  workflow_call:
    inputs:
      release-version:
        description: "Release version"
        required: true
        type: string
        default: "0.0.1"
      next-version:
        description: "Next version"
        required: true
        type: string
        default: "0.0.2-SNAPSHOT"

  workflow_dispatch:
    inputs:
      release-version:
        description: "Release version"
        required: true
        type: string
        default: "0.0.1"
      next-version:
        description: "Next version"
        required: true
        type: string
        default: "0.0.2-SNAPSHOT"

permissions:
  contents: write
  issues: write

env:
  MAVEN_ARGS: -B -U -ntp

jobs:
  branch:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "RELEASE_VERSION=${DISPATCH_RELEASE_VERSION}" >> $GITHUB_ENV
          echo "NEXT_VERSION=${DISPATCH_NEXT_VERSION}" >> $GITHUB_ENV
          echo "NEXT_BRANCH=$(echo ${DISPATCH_NEXT_VERSION} | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV
        env:
          DISPATCH_RELEASE_VERSION: ${{ inputs.release-version }}
          DISPATCH_NEXT_VERSION: ${{ inputs.next-version }}

      - name: Validate version
        if: contains(env.RELEASE_VERSION, 'SNAPSHOT')
        run: |
          echo '::error::RELEASE_VERSION cannot be a SNAPSHOT version.'
          exit 1

      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set Release version
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)

          git checkout -b "release-$RELEASE_VERSION"

          # create new tag for release
          mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${RELEASE_VERSION}
          sed -i "s|<version>[0-9]\+\.[0-9]\+\.[0-9]\+</version>|<version>${RELEASE_VERSION}</version>|g" README.md

          git tag -a "v${RELEASE_VERSION}" -m "[CI Skip] Release v${RELEASE_VERSION}"

          # update version to snapshot
          mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${NEXT_VERSION}
          sed -i "s|<version>[0-9]\+\.[0-9]\+\.[0-9]\+</version>|<version>${NEXT_VERSION}</version>|g" README.md
          git diff --exit-code || git commit -am "[CI Skip] prepare for next development iteration"
          git push origin "release-$RELEASE_VERSION"

          git checkout $BRANCH

          git branch -D "release-$RELEASE_VERSION"

          git push --tags

      - name: Release Milestone
        uses: rosestack/milestone-release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          milestone-title: ${{ env.RELEASE_VERSION }}
          milestone-next: ${{ env.NEXT_BRANCH }}
