name: CI/CD

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
      - '.editorconfig'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
      - '.editorconfig'
  workflow_dispatch:
    inputs:
      os:
        description: 'Operating Systems'
        default: '["windows-latest", "ubuntu-latest", "macOs-latest"]'
        required: false
        type: string
      java-matrix:
        description: 'Java Versions'
        default: '["8", "17", "21", "24"]'
        required: false
        type: string
      java-dist-matrix:
        description: 'Java Distributions'
        default: '["zulu"]'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  MAVEN_ARGS: -ntp -U -B

jobs:
  # 快速检查 - 仅在最新环境运行基本测试
  quick-check:
    name: Quick Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[CI Skip]') && !contains(github.event.pull_request.title, '[CI Skip]')
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: maven

      - name: Run Quick Tests
        run: |
          mvn clean compile test-compile
          mvn test -Dtest=*Test
        timeout-minutes: 30

      - name: Quick Quality Check
        run: |
          mvn checkstyle:check
          mvn spotbugs:check
        timeout-minutes: 15

  # 多平台、多JDK版本构建测试
  build-matrix:
    name: ${{ matrix.os }}-jdk-${{ matrix.java }}-${{ matrix.java-dist }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    needs: quick-check
    if: |
      always() &&
      !contains(github.event.head_commit.message, '[CI Skip]') &&
      !contains(github.event.pull_request.title, '[CI Skip]') &&
      (needs.quick-check.result == 'success' || needs.quick-check.result == 'skipped' || github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    strategy:
      fail-fast: false
      matrix:
        os: ${{
          github.event_name == 'workflow_dispatch' && fromJSON(inputs.os) ||
          github.event_name == 'pull_request' && fromJSON('["ubuntu-latest"]') ||
          fromJSON('["ubuntu-latest", "windows-latest", "macOs-latest"]')
        }}
        java: ${{
          github.event_name == 'workflow_dispatch' && fromJSON(inputs.java-matrix) ||
          github.event_name == 'pull_request' && fromJSON('["17"]') ||
          fromJSON('["8", "17", "21", "24"]')
        }}
        java-dist: ${{
          github.event_name == 'workflow_dispatch' && fromJSON(inputs.java-dist-matrix) ||
          fromJSON('["zulu"]')
        }}

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.java-dist }}
          java-version: ${{ matrix.java }}
          cache: maven

      - name: Build with Maven
        timeout-minutes: 120
        run: mvn clean verify

      - name: Upload Test Results
        if: failure() && matrix.java == '17' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.java-dist }}
          path: |
            target/surefire-reports/
            target/failsafe-reports/
          retention-days: 7

      - name: Upload Coverage Report
        if: matrix.java == '17' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.java-dist }}
          path: |
            target/jacoco-results/
            target/site/jacoco/
          retention-days: 7

  # 代码质量分析
  quality-analysis:
    name: Quality Analysis
    runs-on: ubuntu-latest
    needs: build-matrix
    if: always() && (needs.build-matrix.result == 'success' || github.event_name == 'push')
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: maven

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: coverage-report-ubuntu-latest-17-zulu
          path: target/

      - name: Quality Analysis
        run: |
          mvn checkstyle:check
          mvn spotbugs:check
          mvn pmd:check

      - name: Cache SonarCloud packages
        if: env.SONAR_TOKEN != ''
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Analysis
        if: env.SONAR_TOKEN != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar

      - name: Check Dependencies
        run: |
          mvn versions:display-dependency-updates
          mvn versions:display-plugin-updates

      - name: Upload Analysis Results
        uses: actions/upload-artifact@v4
        with:
          name: analysis-results
          path: |
            target/site/
            target/checkstyle-result.xml
            target/spotbugs.xml
            target/pmd.xml
          retention-days: 30

  # 安全检查
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-matrix
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: maven

      - name: OWASP Dependency Check
        run: mvn org.owasp:dependency-check-maven:check
        continue-on-error: true

      - name: Upload Security Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: |
            target/dependency-check-report.html
            target/dependency-check-report.xml
          retention-days: 30

  # 部署到快照仓库 (仅主分支)
  deploy-snapshot:
    name: Deploy Snapshot
    runs-on: ubuntu-latest
    needs: [build-matrix, quality-analysis]
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main' &&
      contains(github.event.head_commit.message, 'SNAPSHOT') &&
      needs.build-matrix.result == 'success'
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Deploy to Snapshot Repository
        run: mvn deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  # 通知状态
  notify:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [quick-check, build-matrix, quality-analysis, security-scan, deploy-snapshot]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Build Status Summary
        run: |
          echo "## 🚀 CI/CD Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Quick Check | ${{ needs.quick-check.result == 'success' && '✅ Passed' || needs.quick-check.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | PR快速验证 |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Matrix | ${{ needs.build-matrix.result == 'success' && '✅ Passed' || needs.build-matrix.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | 多平台多JDK构建测试 |" >> $GITHUB_STEP_SUMMARY
          echo "| Quality Analysis | ${{ needs.quality-analysis.result == 'success' && '✅ Passed' || needs.quality-analysis.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | 代码质量检查 |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result == 'success' && '✅ Passed' || needs.security-scan.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | 安全漏洞扫描 |" >> $GITHUB_STEP_SUMMARY
          echo "| Deploy Snapshot | ${{ needs.deploy-snapshot.result == 'success' && '✅ Deployed' || needs.deploy-snapshot.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} | 快照版本部署 |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** \`${{ github.event_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

          # 如果有失败的job，添加故障排除信息
          if [[ "${{ needs.build-matrix.result }}" == "failure" || "${{ needs.quality-analysis.result }}" == "failure" || "${{ needs.security-scan.result }}" == "failure" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ⚠️ 故障排除" >> $GITHUB_STEP_SUMMARY
            echo "检查失败的job详情和日志，常见问题：" >> $GITHUB_STEP_SUMMARY
            echo "- 编译错误：检查代码语法和依赖" >> $GITHUB_STEP_SUMMARY
            echo "- 测试失败：查看测试报告和覆盖率" >> $GITHUB_STEP_SUMMARY
            echo "- 质量检查：修复代码风格和静态分析问题" >> $GITHUB_STEP_SUMMARY
            echo "- 安全扫描：更新依赖版本解决漏洞" >> $GITHUB_STEP_SUMMARY
          fi
